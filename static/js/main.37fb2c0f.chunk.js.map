{"version":3,"sources":["components/sign-in/SignIn.tsx","components/formulaire/Formulaire.tsx","components/message/Message.tsx","base.ts","App.tsx","components/error-pages/Error404.tsx","index.tsx"],"names":["SignIn","props","useState","pseudo","setPseudo","className","onSubmit","event","preventDefault","history","push","type","value","onChange","target","name","id","required","placeholder","Formulaire","message","setMessage","addMessage","maxLength","length","setLength","createMessage","onKeyUp","key","Message","isUser","children","base","firebase","initializeApp","apiKey","authDomain","databaseURL","Rebase","createClass","database","EMPTY_MESSAGES","App","internalProps","state","messages","match","params","messageRef","createRef","Date","now","Object","keys","slice","forEach","setState","syncState","context","this","ref","current","scrollTop","scrollHeight","TransitionGroup","map","CSSTransition","timeout","classNames","Component","Error404","Root","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37fb2c0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport interface ISignInProps {\n    history: { push: Function }\n}\n\nexport default function SignIn(props: ISignInProps) {\n    const [pseudo, setPseudo] = useState('');\n    const onChange = (event: { target: { value: string } }) => {\n        setPseudo(event.target.value);\n    };\n    const onSubmit = (event: { preventDefault: Function }) => {\n        event.preventDefault();\n        props.history.push('/pseudo/' + pseudo);\n    };\n    return (\n        <div className=\"connexionBox\">\n            <form className=\"connexion\" onSubmit={onSubmit}>\n                <label></label>\n                <input type=\"text\" value={pseudo} onChange={onChange} name=\"\" id=\"\" required placeholder=\"Pseudo\" />\n                <button type=\"submit\">Go</button>\n            </form>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\n\nexport interface IFormulaireProps {\n    addMessage: Function,\n    pseudo: string,\n    length?: number\n}\n\nexport default function Formulaire(props: IFormulaireProps) {\n\n    const [message, setMessage] = useState('');\n    const { pseudo, addMessage } = props;\n    const maxLength = props.length || 140\n    const [length, setLength] = useState(maxLength);\n\n    const createMessage = () => {\n        const createdMessage = { pseudo, message };\n        addMessage(createdMessage);\n        setMessage('');\n        setLength(maxLength);\n    };\n\n    const onSubmit = (event: { preventDefault: Function }) => {\n        event.preventDefault();\n        createMessage();\n    };\n\n    const onKeyUp = (event: { key: string }) => {\n        if (event.key === 'Enter') {\n            createMessage();\n        }\n    };\n\n    const onChange = (event: { target: { value: string } }) => {\n        setMessage(event.target.value);\n        setLength(maxLength - event.target.value.length);\n    };\n\n    return (\n        <form\n            className=\"form\"\n            onSubmit={onSubmit}\n        >\n            <textarea\n                value={message}\n                onChange={onChange}\n                required\n                maxLength={maxLength}\n                onKeyUp={onKeyUp}\n            />\n            <div className=\"info\">{length}</div>\n            <button type=\"submit\">Send</button>\n        </form>\n    );\n}\n","import * as React from 'react';\n\nexport interface IMessageProps {\n    children: string,\n    pseudo: string,\n    isUser: Function\n}\n\nexport default function Message(props: IMessageProps) {\n    return (\n        <p className={props.isUser(props.pseudo) ? \"user-message\" : \"not-user-message\"}>\n            {props.isUser(props.pseudo) ? null : <strong>{props.pseudo} : </strong>}\n            {props.children}\n        </p>\n    );\n}\n","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyDjpbWFh6q5WwvUUuzuYFSsyd_Hqzf062w\",\n    authDomain: \"chat-box-react-d0ea4.firebaseapp.com\",\n    databaseURL: \"https://chat-box-react-d0ea4.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebase.database());\n\nexport { firebaseApp }\nexport default base;","import React, { Component, createRef } from 'react';\n\nimport './App.css';\nimport './animation.css';\nimport Formulaire from './components/formulaire/Formulaire';\nimport Message from './components/message/Message';\nimport base from './base';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst EMPTY_MESSAGES: any = {};\n\nclass App extends Component {\n  internalProps: any = this.props\n  state = {\n    messages: EMPTY_MESSAGES,\n    pseudo: this.internalProps.match.params.pseudo\n  };\n\n  messageRef: any = createRef();\n\n  componentDidMount() {\n    base.syncState('/', { context: this, state: 'messages' });\n  }\n\n  componentDidUpdate() {\n    const ref: any = this.messageRef.current;\n    ref.scrollTop = ref.scrollHeight;\n  }\n\n  addMessage = (message: any) => {\n    const messages = { ...this.state.messages };\n    messages[`message-${Date.now()}`] = message;\n    Object.keys(messages).slice(0, -10).forEach((key) => {\n      messages[key] = null;\n    });\n    this.setState({ messages: messages });\n  };\n\n  isUser = (pseudo: string) => this.state.pseudo === pseudo;\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div>\n          <div className=\"messages\" ref={this.messageRef}>\n            <TransitionGroup className=\"message\">\n              {Object.keys(this.state.messages).map((id) => {\n                return (\n                  <CSSTransition key={id} timeout={200} classNames='fade'>\n                    <Message isUser={this.isUser} pseudo={this.state.messages[id].pseudo}>{this.state.messages[id].message}</Message>\n                  </CSSTransition>\n                )\n              })}\n            </TransitionGroup>\n          </div>\n          <Formulaire\n            pseudo={this.state.pseudo}\n            addMessage={this.addMessage}\n            length={140}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nexport interface IError404Props {\n}\n\nexport default function Error404(props: IError404Props) {\n    return (\n        <div>\n            <h2 className=\"notFound\">Error 404</h2>\n            <h3>Page not Found</h3>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport SignIn from './components/sign-in/SignIn';\n\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport App from './App';\nimport Error404 from './components/error-pages/Error404';\n\nconst Root = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path='/' component={SignIn}></Route>\n      <Route path='/pseudo/:pseudo' component={App}></Route>\n      <Route component={Error404}></Route>\n    </Switch>\n  </HashRouter>\n);\n\nReactDOM.render(<Root/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}